file = { SOI
    ~ (packageStatement ~ NL)?
    ~ (using ~ (NL ~ using)*)?
    ~ statements?
    ~ EOI
}

packageStatement = { "package " ~ qname }
using = { "using " ~ qname }

statements = { statement ~ (NL ~ statement)* }
statement = _{ assignment }

variableStarter = { "val " | "var " }
assignment = { variableStarter? ~ qname ~ "=" ~ expr }

expr = { NL? ~ prefix* ~ NL? ~ primary ~ NL? ~ postfix* ~ NL? ~ (infix ~ NL? ~ prefix* ~ NL? ~ primary ~ NL? ~ postfix* ~ NL?)* }

infix = _{ add | sub | mul | div | modulus | pow | eq | neq | lt | gt | leq | geq | and | or }
    add = { "+" }
    sub = { "-" }
    mul = { "*" }
    div = { "/" }
    modulus = { "%" }
    pow = { "**" }
    eq = { "==" }
    neq = { "!=" }
    lt = { "<" }
    gt = { ">" }
    leq = { "<=" }
    geq = { ">=" }
    and = { "&&" }
    or = { "||" }

prefix = _{ not | neg }
    not = { "!" }
    neg = { "-" }

postfix = _{ call | index | assertNotNull }
    call = { "(" ~ (expr ~ ("," ~ expr)*)? ~ ")" }
    index = { "[" ~ expr ~ "]" }
    assertNotNull = { "!" }

primary = { literal | qname | "(" ~ expr ~ ")" }

literal = _{ number | string | boolean }
    number = @{ (ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)*) }
    string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
    boolean = @{ "true" | "false" }

qname = @{ name ~ ("::" ~ name)* }
name = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

NL = _{ NEWLINE+ }

WHITESPACE = _{ " " | "\t" }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }